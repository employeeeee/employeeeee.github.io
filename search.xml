<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hive设计思想与架构]]></title>
    <url>%2F2018%2F11%2F06%2FHive%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3%E4%B8%8E%E6%9E%B6%E6%9E%84%2F</url>
    <content type="text"><![CDATA[Hive是建立在Hadoop上的 是针对MapReduce开发的技术 Hive的组件主要分为两类: 客户端组件和服务端组件. 下面我们对这些组件进行逐一说明.1) 客户端组件CLI: Command Line Interface,命令行接口 最常用的客户端组件就是CLI CLI启动的时候 会同时启动一个Hive副本Client: Client是Hive的客户端 用于连接Hive Server 在启动Client模式的时候 需要指出Hive Server 所在的节点 , 并且在该节点启动Hive Server图4-2 所示的结构图没有写上 Thrift客户端 但是Hive架构的许多客户端接口 都是建立在Thrift客户端上的 包括JDBC 和 ODBC接口Web GUI : Hive 客户端 提供 了一种通过网页访问Hive 所提供的服务的方式 这个接口duiying`Hive的HWI(Hive Web Interface) 组件 使用前要启动HWI服务 2) 服务器端组件Driver 组件: 该组件包括Compiler Optimizer 和 Executor 其作用是完成HiiveQL(类SQL)查询语句的词法分析 语法分析 编译 优化及查询计划的生成.生成的查询计划存储在HDFS中 并在随后又MapReduce调用执行.MetaStore组件: 元数据服务组件 这个组件存储Hive的元数据.Hive的元数据存储在关系数据库里 Hive支持的关系数据库有Derby Mysql.Hive中的元数据包括表的名字 表的列和分区及其属性. 表的属性(是否为外部表等) 表数据所在目录 元数据对于Hive十分重要 所以Hive支持吧MEtaStore服务独立出来 安装到远程的服务器集群里从而解耦Hive服务 和 MetaStore服务 保证Hive运行的健壮性.Hive的MetaStore组件是Hive元数据的集中存放地 MetaStore 组件包括两个部分: MetaStore 服务和 后台数据的存储. 后台数据存储的介质就是关系数据库例如Hive 默认的嵌入式磁盘数据库Derby 还有MYsql 数据库 MetaStore服务是建立在后台数据存储介质之上 并且可以和Hive服务进行交互的服务组件默认情况下 MetaStore服务和Hive服务是安装在一起的 运行在同一个进程当中 也可以把MetaStore服务从Hive服务中剥离出来独立安装在一个集群里 Hive远程调用MetaStore服务 我们可以把元数据这一层放到防火墙之后 当客户端访问Hive服务时 就可以连接到元数据这一层 从而提供更好的管理性能和安全保障. 使用远程的MetaStore服务 可以让MetaStore服务和Hive服务运行在不同的进程里 这样既保证了Hive的稳定 有提升了Hive服务的效率Thrift服务 :Thtift是FaceBook开发的一个软件框架 它用来进行可扩展且跨语言服务的开发 Hive继承了该服务 可以让不同的编程语言调用Hive的接口.]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据 Hive</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hive和数据库的区别]]></title>
    <url>%2F2018%2F11%2F05%2FHive%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[Hive 和 数据库的区别Hive并不是数据库,从结构上看,Hive和数据库除了有类似的查询语言,再无类似之处.数据库可以用在Online的应用中,但是Hive是为了数据仓库而设计的 数据存储位置 Hive是建立在Hadoop上的,所有Hive的数据都是存储在HDFS中的;而数据库可以将数据保存在块设备或者本地文件系统中 查询语言 由于SQL被广泛地应用在数据仓库中 一次针对Hive的特性设计了类SQL的查询语言HQL 熟悉SQL的开发者可以很方便的使用Hive进行开发. 索引 Hive在加载数据的过程中 不会对数据进行任何处理 甚至不会对数据进行扫描 因此也没有对数据中的某些Key建立索引,Hive要访问数据中满足条件的特定值时需要暴力扫描整个数据 因此访问延迟高,但由于MapReduce的引入 Hive可以进行并行访问数据 因此即使没有索引 对于大数据量的访问 Hive仍然可以体现出优势 数据格式 Hive中没有定义专门的数据格式 数据格式可以由用户指定 用户定义数据格式需要指定三个属性: 列分隔符 行分隔符 以及读取文件数据的方法 .在加载过程中不会对数据本省进行修改 知识复制或者移动到相应的HDFS目录中.而数据库会按照一定的组织存储 过程耗时 执行 Hive查询的执行是通过 MapReduce实现 而数据库有自己的执行引擎. Hive不支持对数据的改写和添加 加载时候是确定好的 延迟 MapReduce本身延迟比较高 数据规模小的时候 数据库的执行延迟较低 可扩展性 由于Hive是建立在Hadoop上 因此Hive的可扩展性和Hadoop一直 而数据库的扩展性很有限 数据规模 由于Hive建立在集群 可以利用MapReduce进行并行计算 因此可以支持很大规模的数据10 Hive对硬件要求比较低 而关系型数据库管理系统为了提高线上处理速度 对硬件要求相对较高.]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>Hive 大数据</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[idea打开项目没有文件夹]]></title>
    <url>%2F2018%2F11%2F05%2Fidea%E6%89%93%E5%BC%80%E9%A1%B9%E7%9B%AE%E6%B2%A1%E6%9C%89%E6%96%87%E4%BB%B6%E5%A4%B9%2F</url>
    <content type="text"><![CDATA[使用idea打开eclipse项目 会出现没有目录的情况解决办法: 关闭idea 找到项目文件下的.idea文件夹将.idea文件夹删除再重新打开项目即可.]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hive相关]]></title>
    <url>%2F2018%2F11%2F04%2FHive%E7%9B%B8%E5%85%B3%2F</url>
    <content type="text"><![CDATA[Hive 的简介Hive 蜂巢 是一种数据仓库工具 要明确的是Hive知识一种工具 可以用Hive将结构化的数据文件映射为一张数据库表 并提供完整的SQL 查询功能 可以将Sql 语句 转换为MapReduce任务运行所以Hive 本身是不具备存储功能的 要将它和数据库区分开 Hive的来源Hive是Facebook 开发的构建于Hadoop集群之上的数据仓库应用 它提供了 类似于SQL语法的HQL语句作为数据访问接口.这使普通分析人员在应用HADOOP的过程中更加容易学习.至于Facebook为什么使用hadoop和Hive组建数据仓库 大致原因如下: Facebook的数据仓库开始是构建于MySQL之上的,但是随着数据量的增加 查询需要的时间太久了 当数据量达到1TB 时 MySQL后台进程就崩溃了,所以Facebook决定把数据仓库转移到Oracle.这次转移也付出了很多的代价 Oracle虽然可以应对几TB的数据 但是在手机用户点击流数据(每天大约400gb)后 Oracle 也支持永恒不住了 由此要考虑新的数据仓库方案 4.内部人员简历一个并行日志处理系统Cheetah 勉强可以在24小时内处理一天的点击流数据 但是依旧有很多缺点 后来开发人员尝试将日志数据同事载入Cheetah和Hadoop中对比 发现Hadoop在处理大规模数据更有优势,后来就把工作流都转移到了Hadoop上 并基于Hadoop做了很多有价值的分析 为了使大多数人使用Hadoop 开发了Hive Hive 提供了类似于SQL的查询接口 集群存储2.5PB的数据 并且以每天15TB的数据增长 每天提交3000以上的数据 大约处理 55TB的数据]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据 Hive</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于thymeleaf+layout布局的使用方式]]></title>
    <url>%2F2018%2F11%2F04%2F%E5%85%B3%E4%BA%8Ethymeleaf-layout%E5%B8%83%E5%B1%80%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[最近在做项目时候用到了 layout布局的方式,相对方便了很多,记录一下.这个layout的效果是可以把网页的相同部分提取出来,只需要更改核心不一样的地方就可以了.也就是更改后边我们会提到的content部分. 首先建立相同部分的html,这里我命名为layout.html,放在了`templates/layout’文件夹下,这个路径以后是会用到的,以下是我的layout的代码,比较粗糙.但是应该会更好的帮助理解.要提到几个重要的部分 xmlns:th=”http://www.thymeleaf.org&quot; 引入th xmlns:layout=”http://www.w3.org/1999/xhtml&quot; 引入 thymeleaf 你要将不同内容放置的位置 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot; xmlns:layout=&quot;http://www.w3.org/1999/xhtml&quot;&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;欢迎登录&lt;/title&gt; &lt;head&gt; &lt;style&gt; h1 &#123; color: yellowgreen; &#125; table, th, td &#123; border: 1px solid sandybrown; &#125; th &#123; background: sandybrown; color: cornsilk; &#125; .row:after &#123; content: &quot;&quot;; clear: both; display: block; &#125; [class*=&quot;col-&quot;] &#123; float: left; padding: 15px; &#125; html &#123; font-family: &quot;Lucida Sans&quot;, sans-serif; &#125; .header &#123; background-color: #9933cc; color: #ffffff; padding: 15px; &#125; .menu ul &#123; list-style-type: none; margin: 0; padding: 0; &#125; .menu li &#123; padding: 8px; margin-bottom: 7px; background-color: #33b5e5; color: #ffffff; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24); &#125; .menu li:hover &#123; background-color: #0099cc; &#125; .aside &#123; background-color: #33b5e5; padding: 15px; color: #ffffff; text-align: center; font-size: 14px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24); &#125; .footer &#123; background-color: #0099cc; color: #ffffff; text-align: center; font-size: 12px; padding: 15px; &#125; .right &#123; float: right; &#125; .col-1 &#123; width: 8.33%; &#125; .col-2 &#123; width: 16.66%; &#125; .col-3 &#123; width: 25%; &#125; .col-4 &#123; width: 33.33%; &#125; .col-5 &#123; width: 41.66%; &#125; .col-6 &#123; width: 50%; &#125; .col-7 &#123; width: 58.33%; &#125; .col-8 &#123; width: 66.66%; &#125; .col-9 &#123; width: 75%; &#125; .col-10 &#123; width: 83.33%; &#125; .col-11 &#123; width: 91.66%; &#125; .col-12 &#123; width: 100%; &#125; @media only screen and (max-width: 768px) &#123; /* For mobile phones: */ [class*=&quot;col-&quot;] &#123; width: 100%; &#125; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;center&gt; &lt;div class=&quot;header&quot;&gt; &lt;h2&gt;User Information table&lt;/h2&gt; &lt;span th:text=&quot;$&#123;&apos;Hi &apos;+session.loginUser.username&#125;&quot;&gt;Hi, Admin&lt;/span&gt; &lt;/div&gt; &lt;a th:href=&quot;@&#123;/user/index&#125;&quot;&gt;&lt;/a&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-3 menu&quot;&gt; &lt;ul&gt; &lt;li&gt;用户信息管理&lt;/li&gt; &lt;li&gt;学生信息管理&lt;/li&gt; &lt;li&gt;教师信息管理&lt;/li&gt; &lt;li&gt;课程信息管理&lt;/li&gt; &lt;li&gt;周边商品管理&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;col-5&quot;&gt; //重点部分 &lt;div layout:fragment=&quot;content&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;col-3 right&quot;&gt; &lt;div class=&quot;aside&quot;&gt; &lt;h2&gt;What?&lt;/h2&gt; &lt;p&gt;Chania is a city on the island of Crete.&lt;/p&gt; &lt;h2&gt;Where?&lt;/h2&gt; &lt;p&gt;Crete is a Greek island in the Mediterranean Sea.&lt;/p&gt; &lt;h2&gt;How?&lt;/h2&gt; &lt;p&gt;You can reach Chania airport from all over Europe.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/center&gt; &lt;div class=&quot;footer&quot;&gt; &lt;p&gt;Resize the browser window to see how the content respond to the resizing.@Design by &lt;a href=&quot;www.baidu.com&quot;&gt;empoloyeeeeee&lt;/a&gt; &lt;/p&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 然后建立新的html,这里我建立的是一个简单的添加用户的界面add.html,代码如下要提到的几个重要的部分 xmlns:layout=”http://www.w3.org/1999/xhtml&quot; xmlns:th=”http://www.thymeleaf.org layout:decorator=”layout/layout” 前边我们提到的路径,这个就是你layout.html文件的位置. 设置div content 然后就可以将你需要更改的内容写在这个位置1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot; xmlns:layout=&quot;http://www.w3.org/1999/xhtml&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot; layout:decorator=&quot;layout/layout&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style&gt; input[type=&quot;text&quot;]:focus&#123; background-color: grey; &#125; input#userid &#123; margin-left: 20px; &#125; #add&#123; padding: 10px 40px; border: 5px gray solid; box-shadow: 10px 10px 5px aquamarine; font-family: 华文行楷; font-size: 14px; border-radius: 20px; &#125; input&#123; padding: 10px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;!--&lt;div class=&quot;bs-example&quot; layout:fragment=&quot;content&quot;&gt;--&gt;&lt;div layout:fragment=&quot;content&quot; &gt; &lt;div id=&quot;add&quot;&gt; &lt;form action=&quot;#&quot; th:action=&quot;@&#123;/user/add&#125;&quot; th:object=&quot;$&#123;userList&#125;&quot; method=&quot;post&quot;&gt; &lt;label&gt;id&lt;/label&gt;&lt;input type=&quot;text&quot; th:field=&quot;*&#123;userid&#125;&quot; id=&quot;userid&quot;/&gt;&lt;br&gt; &lt;label&gt;姓名&lt;/label&gt;&lt;input type=&quot;text&quot; th:field=&quot;*&#123;username&#125;&quot;/&gt;&lt;br&gt; &lt;label&gt;密码&lt;/label&gt;&lt;input type=&quot;text&quot; th:field=&quot;*&#123;password&#125;&quot;/&gt;&lt;br&gt; &lt;label&gt;昵称&lt;/label&gt;&lt;input type=&quot;text&quot; th:field=&quot;*&#123;nickname&#125;&quot;/&gt;&lt;br&gt; &lt;input type=&quot;submit&quot; value=&quot;添加&quot;/&gt; &lt;/form&gt; &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 之前在写到这的时候就直接跑程序了 ,发现不好用,但是感觉写的没有问题 ,最后找到了问题所在,在meaven中没有配置thmeleaf,所以在meaven中添加如下代码 12345&lt;dependency&gt; &lt;groupId&gt;nz.net.ultraq.thymeleaf&lt;/groupId&gt; &lt;artifactId&gt;thymeleaf-layout-dialect&lt;/artifactId&gt; &lt;version&gt;2.2.2&lt;/version&gt; &lt;/dependency&gt; controller中的写法我就不过多的叙述了 配置好路径 就可以测试一下了 亲测是通的 效果如图]]></content>
      <categories>
        <category>ssm项目相关</category>
      </categories>
      <tags>
        <tag>springboot</tag>
        <tag>thymeleaf</tag>
        <tag>meaven</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[idea新建类自动生成注释]]></title>
    <url>%2F2018%2F11%2F03%2F%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9A%84%E6%9D%A5%E6%BA%90%2F</url>
    <content type="text"><![CDATA[打开idea 使用ctrl+alt+s 打开设置。/* Created by 周子淏 on ${DATE} ${TIME}*/讲这个内容复制粘贴到text框内。新建class后 会自动生成注释。]]></content>
      <categories>
        <category>idea的使用</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[firstBlog]]></title>
    <url>%2F2018%2F11%2F03%2FFirstBlog%2F</url>
    <content type="text"><![CDATA[这是我的一个博客]]></content>
  </entry>
</search>
